{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww13320\viewh13480\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
The default interactive shell is now zsh.\
To update your account to use zsh, please run `chsh -s /bin/zsh`.\
For more details, please visit https://support.apple.com/kb/HT208050.\
Michelles-MacBook-Air:django_ORM michellehan$ pwd\
/Users/michellehan/Documents/HackerHouse/python_stack/django/django_ORM\
Michelles-MacBook-Air:django_ORM michellehan$ cd ..\
Michelles-MacBook-Air:django michellehan$ cd ..\
Michelles-MacBook-Air:python_stack michellehan$ cd my_environments\
Michelles-MacBook-Air:my_environments michellehan$ source djangopy3env/bin/activate\
(djangoPy3Env) Michelles-MacBook-Air:my_environments michellehan$ cd ..\
(djangoPy3Env) Michelles-MacBook-Air:python_stack michellehan$ cd django/django_orm\
(djangoPy3Env) Michelles-MacBook-Air:django_orm michellehan$ django-admin startproject book_authors_proj\
(djangoPy3Env) Michelles-MacBook-Air:django_orm michellehan$ cd book_authors_proj\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py startapp books_authors_app\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py makemigrations\
Traceback (most recent call last):\
  File "manage.py", line 21, in <module>\
    main()\
  File "manage.py", line 17, in main\
    execute_from_command_line(sys.argv)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/management/__init__.py", line 381, in execute_from_command_line\
    utility.execute()\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/management/__init__.py", line 375, in execute\
    self.fetch_command(subcommand).run_from_argv(self.argv)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/management/base.py", line 323, in run_from_argv\
    self.execute(*args, **cmd_options)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/management/base.py", line 361, in execute\
    self.check()\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/management/base.py", line 390, in check\
    include_deployment_checks=include_deployment_checks,\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/management/base.py", line 377, in _run_checks\
    return checks.run_checks(**kwargs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/checks/registry.py", line 72, in run_checks\
    new_errors = check(app_configs=app_configs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/checks/urls.py", line 40, in check_url_namespaces_unique\
    all_namespaces = _load_all_namespaces(resolver)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/core/checks/urls.py", line 57, in _load_all_namespaces\
    url_patterns = getattr(resolver, 'url_patterns', [])\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/utils/functional.py", line 80, in __get__\
    res = instance.__dict__[self.name] = self.func(instance)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/urls/resolvers.py", line 571, in url_patterns\
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/utils/functional.py", line 80, in __get__\
    res = instance.__dict__[self.name] = self.func(instance)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/urls/resolvers.py", line 564, in urlconf_module\
    return import_module(self.urlconf_name)\
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/importlib/__init__.py", line 127, in import_module\
    return _bootstrap._gcd_import(name[level:], package, level)\
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import\
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load\
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked\
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked\
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module\
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/django/django_ORM/book_authors_proj/book_authors_proj/urls.py", line 19, in <module>\
    path('',include('books_authors_app.urls')),\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/urls/conf.py", line 34, in include\
    urlconf_module = import_module(urlconf_module)\
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/importlib/__init__.py", line 127, in import_module\
    return _bootstrap._gcd_import(name[level:], package, level)\
  File "<frozen importlib._bootstrap>", line 1006, in _gcd_import\
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load\
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked\
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked\
  File "<frozen importlib._bootstrap_external>", line 728, in exec_module\
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/django/django_ORM/book_authors_proj/books_authors_app/urls.py", line 2, in <module>\
    from . import views\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/django/django_ORM/book_authors_proj/books_authors_app/views.py", line 2, in <module>\
    from .models import Dojo, Ninja\
ImportError: cannot import name 'Dojo' from 'books_authors_app.models' (/Users/michellehan/Documents/HackerHouse/python_stack/django/django_ORM/book_authors_proj/books_authors_app/models.py)\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py makemigrations\
Migrations for 'books_authors_app':\
  books_authors_app/migrations/0001_initial.py\
    - Create model Book\
    - Create model Author\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py migrate\
Operations to perform:\
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions\
Running migrations:\
  Applying contenttypes.0001_initial... OK\
  Applying auth.0001_initial... OK\
  Applying admin.0001_initial... OK\
  Applying admin.0002_logentry_remove_auto_add... OK\
  Applying admin.0003_logentry_add_action_flag_choices... OK\
  Applying contenttypes.0002_remove_content_type_name... OK\
  Applying auth.0002_alter_permission_name_max_length... OK\
  Applying auth.0003_alter_user_email_max_length... OK\
  Applying auth.0004_alter_user_username_opts... OK\
  Applying auth.0005_alter_user_last_login_null... OK\
  Applying auth.0006_require_contenttypes_0002... OK\
  Applying auth.0007_alter_validators_add_error_messages... OK\
  Applying auth.0008_alter_user_username_max_length... OK\
  Applying auth.0009_alter_user_last_name_max_length... OK\
  Applying auth.0010_alter_group_name_max_length... OK\
  Applying auth.0011_update_proxy_permissions... OK\
  Applying books_authors_app.0001_initial... OK\
  Applying sessions.0001_initial... OK\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py shell\
Python 3.7.6 (default, Dec 30 2019, 19:38:26) \
[Clang 11.0.0 (clang-1100.0.33.16)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
(InteractiveConsole)\
>>> from books_authors_app import*\
>>> Book.objects.create(title='Goosebumps',desc='scary stories')\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
NameError: name 'Book' is not defined\
>>> from books_authors_app.models import*\
>>> Book.objects.create(title='Goosebumps',desc='scary stories')\
<Book: Book object (1)>\
>>> Book.objects.get(id=1).delete()\
(1, \{'books_authors_app.Author_books_authors': 0, 'books_authors_app.Book': 1\})\
>>> Book.objects.create(title='C Sharp',desc='a Microsoft programming language')\
<Book: Book object (2)>\
>>> Book.objects.create(title='Java',desc='a general purpose programming language')\
<Book: Book object (3)>\
>>> Book.objects.create(title='Python',desc='a high-level, general purpose programming language')\
<Book: Book object (4)>\
>>> Book.objects.create(title='PHP',desc='a popular general purpose scripting language especially suited to web development')\
<Book: Book object (5)>\
>>> Book.objects.create(title='Ruby',desc='a high-level general purpose programming language developed in the mid-1990s')\
<Book: Book object (6)>\
>>> Author.objects.create(first_name='Jane',last_name='Austen')\
<Author: Author object (1)>\
>>> Author.objects.create(first_name='Emily',last_name='Dickinson')\
<Author: Author object (2)>\
>>> Author.objects.create(first_name='Fyodor',last_name='Dostoevsky')\
<Author: Author object (3)>\
>>> Author.objects.create(first_name='William',last_name='Shakespeare')\
<Author: Author object (4)>\
>>> Author.objects.create(first_name='Lau',last_name='Tzu')\
<Author: Author object (5)>\
>>> python3 manage.py makemigration\
  File "<console>", line 1\
    python3 manage.py makemigration\
                 ^\
SyntaxError: invalid syntax\
>>> python3 manage.py makemigrations\
  File "<console>", line 1\
    python3 manage.py makemigrations\
                 ^\
SyntaxError: invalid syntax\
>>> exit()\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py makemigrations\
You are trying to add a non-nullable field 'notes' to author without a default; we can't do that (the database needs something to populate existing rows).\
Please select a fix:\
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\
 2) Quit, and let me add a default in models.py\
Select an option: 1\
Please enter the default value now, as valid Python\
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now\
Type 'exit' to exit this prompt\
>>> "some notes here"\
Migrations for 'books_authors_app':\
  books_authors_app/migrations/0002_author_notes.py\
    - Add field notes to author\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py migrate\
Operations to perform:\
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions\
Running migrations:\
  Applying books_authors_app.0002_author_notes... OK\
(djangoPy3Env) Michelles-MacBook-Air:book_authors_proj michellehan$ python3 manage.py shell\
Python 3.7.6 (default, Dec 30 2019, 19:38:26) \
[Clang 11.0.0 (clang-1100.0.33.16)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
(InteractiveConsole)\
>>> from books_authors_app.models import*\
>>> Book.objects.get(name='C Sharp').name='C#'.save()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'str' object has no attribute 'save'\
>>> Book.objects.get(name='C Sharp').name='C#'\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method\
    return getattr(self.get_queryset(), name)(*args, **kwargs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get\
    clone = self.filter(*args, **kwargs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 892, in filter\
    return self._filter_or_exclude(False, *args, **kwargs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 910, in _filter_or_exclude\
    clone.query.add_q(Q(*args, **kwargs))\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1290, in add_q\
    clause, _ = self._add_q(q_object, self.used_aliases)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1318, in _add_q\
    split_subq=split_subq, simple_col=simple_col,\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1190, in build_filter\
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1049, in solve_lookup_type\
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1420, in names_to_path\
    "Choices are: %s" % (name, ", ".join(available)))\
django.core.exceptions.FieldError: Cannot resolve keyword 'name' into field. Choices are: books_authors, created_at, desc, id, title, updated_at\
>>> Book1=Book.objects.get(name='C Sharp')\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method\
    return getattr(self.get_queryset(), name)(*args, **kwargs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get\
    clone = self.filter(*args, **kwargs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 892, in filter\
    return self._filter_or_exclude(False, *args, **kwargs)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py", line 910, in _filter_or_exclude\
    clone.query.add_q(Q(*args, **kwargs))\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1290, in add_q\
    clause, _ = self._add_q(q_object, self.used_aliases)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1318, in _add_q\
    split_subq=split_subq, simple_col=simple_col,\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1190, in build_filter\
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1049, in solve_lookup_type\
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\
  File "/Users/michellehan/Documents/HackerHouse/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/sql/query.py", line 1420, in names_to_path\
    "Choices are: %s" % (name, ", ".join(available)))\
django.core.exceptions.FieldError: Cannot resolve keyword 'name' into field. Choices are: books_authors, created_at, desc, id, title, updated_at\
>>> Book1=Book.objects.get(id=2)\
>>> Book1.name='C#'\
>>> Book1.save()\
>>> Book1.name()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
TypeError: 'str' object is not callable\
>>> Book.objects.get(id=2)\
<Book: Book object (2)>\
>>> Book.objects.get(id=2).name()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'Book' object has no attribute 'name'\
>>> Book.objects.get(id=2).title()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
TypeError: 'str' object is not callable\
>>> Book.objects.get(id=2).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10ff759d0>, 'id': 2, 'title': 'C Sharp', 'desc': 'a Microsoft programming language', 'created_at': datetime.datetime(2020, 3, 12, 22, 29, 26, 178379, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 1, 42, 249156, tzinfo=<UTC>)\}\
>>> Book.objects.get(id=2).title='C#'.save()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'str' object has no attribute 'save'\
>>> Book.objects.get(id=2).title='C#'\
>>> Book.objects.get(id=2).save()\
>>> Book.objects.get(id=2).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10fddeb90>, 'id': 2, 'title': 'C Sharp', 'desc': 'a Microsoft programming language', 'created_at': datetime.datetime(2020, 3, 12, 22, 29, 26, 178379, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 4, 44, 134442, tzinfo=<UTC>)\}\
>>> Book1=Book.objects.get(id=2).title='C#'\
>>> Book1.save()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'str' object has no attribute 'save'\
>>> Book1=Book.objects.get(id=2)\
>>> Book1.title='C#'.save()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'str' object has no attribute 'save'\
>>> Book1.title='C#'\
>>> Book1.save()\
>>> Book.objects.get(id=2).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10fddec10>, 'id': 2, 'title': 'C#', 'desc': 'a Microsoft programming language', 'created_at': datetime.datetime(2020, 3, 12, 22, 29, 26, 178379, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 6, 53, 753388, tzinfo=<UTC>)\}\
>>> Author4=Author.objects.get(id=4)\
>>> Author4.first_name='Bill'\
>>> Author4.save()\
>>> Author.objects.get(id=4).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10ff86790>, 'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 38, 17, 153658, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 7, 46, 568652, tzinfo=<UTC>)\}\
>>> Book.objects.get(id=2).books_authors.add(Author.objects.get(id=1)\
... Book.objects.get(id=2).__dict__\
  File "<console>", line 2\
    Book.objects.get(id=2).__dict__\
       ^\
SyntaxError: invalid syntax\
>>> Book.objects.get(id=2).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10ff86a10>, 'id': 2, 'title': 'C#', 'desc': 'a Microsoft programming language', 'created_at': datetime.datetime(2020, 3, 12, 22, 29, 26, 178379, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 6, 53, 753388, tzinfo=<UTC>)\}\
>>> Author.objects.get(id=1).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10ff86290>, 'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191870, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191938, tzinfo=<UTC>)\}\
>>> Book1=Book.object.get(id=2)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: type object 'Book' has no attribute 'object'\
>>> Book1=Book.objects.get(id=2)\
>>> Book2=Book.objects.get(id=2)\
>>> Book1=Book.objects.get(id=2)\
>>> Book2=Book.objects.get(id=3)\
>>> Author1=Author.objects.get(id=1)\
>>> Book1.books_authors.add(Author1)\
>>> Book2.books_authors.add(Author1)\
>>> Author.objects.get(id=1).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10ffa64d0>, 'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191870, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191938, tzinfo=<UTC>)\}\
>>> Author1.books_authors.all()\
<QuerySet [<Book: Book object (2)>, <Book: Book object (3)>]>\
>>> Book1.books_authors.all()\
<QuerySet [<Author: Author object (1)>]>\
>>> Book2.books_authors.all()\
<QuerySet [<Author: Author object (1)>]>\
>>> Author2=Author.objects.get(id=2)\
>>> Book3=Book.objects.get(id=4)\
>>> Author2.books_authors.add(Book1).add(Book2).add(Book3)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'NoneType' object has no attribute 'add'\
>>> Author2.books_authors.add(Book1)\
>>> Author2.books_authors.add(Book2)\
>>> Author2.books_authors.add(Book3)\
>>> Author.objects.get(id=2).__dict__\
\{'_state': <django.db.models.base.ModelState object at 0x10ffbb350>, 'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 37, 31, 467452, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 37, 31, 467566, tzinfo=<UTC>)\}\
>>> Author2.books_authors.all()\
<QuerySet [<Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>\
>>> Author3=Author.objects.get(id=3)\
>>> Author3.authors_books.add(Book1)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'Author' object has no attribute 'authors_books'\
>>> Author3.books_authors.add(Book1)\
>>> Author3.books_authors.add(Book2)\
>>> Author3.books_authors.add(Book3)\
>>> Author3.books_authors.add(Book4)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
NameError: name 'Book4' is not defined\
>>> Book4=Book.objects.get(id=5)\
>>> Author3.books_authors.add(Book4)\
>>> Author3.books_authors.all()\
<QuerySet [<Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>, <Book: Book object (5)>]>\
>>> Book5=Book.objects.get(id=6)\
>>> Author4=Author.objects.get(id=4)\
>>> Author4.books_authors.add(Book1).add(Book2)\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'NoneType' object has no attribute 'add'\
>>> Author4.books_authors.add(Book1)\
>>> Author4.books_authors.add(Book2)\
>>> Author4.books_authors.add(Book3)\
>>> Author4.books_authors.add(Book4)\
>>> Author4.books_authors.add(Book5)\
>>> Author4.books_authors.all()\
<QuerySet [<Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>, <Book: Book object (5)>, <Book: Book object (6)>]>\
>>> Book4.books_authors.all()\
<QuerySet [<Author: Author object (3)>, <Author: Author object (4)>]>\
>>> Book4.books_authors.remove(Author1)\
>>> Book4.books_authors.all()\
<QuerySet [<Author: Author object (3)>, <Author: Author object (4)>]>\
>>> Book3.books_authors.all()\
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>\
>>> Book3.books_authors.remove(Author2)\
>>> Book3.books_authors.all()\
<QuerySet [<Author: Author object (3)>, <Author: Author object (4)>]>\
>>> Author5=Author.objects.get(id=4)\
>>> Author5.books_authors.add(Book2)\
>>> Book2.books_authors.all()\
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>\
>>> Book2.books_authors.add(Author5)\
>>> Book2.books_authors.all()\
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>\
>>> Book2.books_authors.all().values()\
<QuerySet [\{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191870, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191938, tzinfo=<UTC>)\}, \{'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 37, 31, 467452, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 37, 31, 467566, tzinfo=<UTC>)\}, \{'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 37, 58, 778430, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 37, 58, 778550, tzinfo=<UTC>)\}, \{'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 38, 17, 153658, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 7, 46, 568652, tzinfo=<UTC>)\}]>\
>>> Author5=Author.objects.get(id=5)\
>>> Author5.books_authors.add(Book2)\
>>> Book2.books_authors.all()\
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>, <Author: Author object (5)>]>\
>>> Book2.books_authors.all().values()\
<QuerySet [\{'id': 1, 'first_name': 'Jane', 'last_name': 'Austen', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191870, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 36, 57, 191938, tzinfo=<UTC>)\}, \{'id': 2, 'first_name': 'Emily', 'last_name': 'Dickinson', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 37, 31, 467452, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 37, 31, 467566, tzinfo=<UTC>)\}, \{'id': 3, 'first_name': 'Fyodor', 'last_name': 'Dostoevsky', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 37, 58, 778430, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 37, 58, 778550, tzinfo=<UTC>)\}, \{'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 38, 17, 153658, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 7, 46, 568652, tzinfo=<UTC>)\}, \{'id': 5, 'first_name': 'Lau', 'last_name': 'Tzu', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 38, 36, 161739, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 38, 36, 161844, tzinfo=<UTC>)\}]>\
>>> Author3.books_author.all()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'Author' object has no attribute 'books_author'\
>>> Author3.books_authors.all()\
<QuerySet [<Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>, <Book: Book object (5)>]>\
>>> Author3.books_authors.all().values()\
<QuerySet [\{'id': 2, 'title': 'C#', 'desc': 'a Microsoft programming language', 'created_at': datetime.datetime(2020, 3, 12, 22, 29, 26, 178379, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 6, 53, 753388, tzinfo=<UTC>)\}, \{'id': 3, 'title': 'Java', 'desc': 'a general purpose programming language', 'created_at': datetime.datetime(2020, 3, 12, 22, 30, 47, 45832, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 30, 47, 46168, tzinfo=<UTC>)\}, \{'id': 4, 'title': 'Python', 'desc': 'a high-level, general purpose programming language', 'created_at': datetime.datetime(2020, 3, 12, 22, 32, 1, 803341, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 32, 1, 803635, tzinfo=<UTC>)\}, \{'id': 5, 'title': 'PHP', 'desc': 'a popular general purpose scripting language especially suited to web development', 'created_at': datetime.datetime(2020, 3, 12, 22, 33, 55, 879164, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 22, 33, 55, 879222, tzinfo=<UTC>)\}]>\
>>> Book5.books_authors.all()\
<QuerySet [<Author: Author object (4)>]>\
>>> Book5.books_authors.all().value()\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
AttributeError: 'QuerySet' object has no attribute 'value'\
>>> Book5.books_authors.all().values()\
<QuerySet [\{'id': 4, 'first_name': 'Bill', 'last_name': 'Shakespeare', 'notes': 'some notes here', 'created_at': datetime.datetime(2020, 3, 12, 22, 38, 17, 153658, tzinfo=<UTC>), 'updated_at': datetime.datetime(2020, 3, 12, 23, 7, 46, 568652, tzinfo=<UTC>)\}]>\
>>> }